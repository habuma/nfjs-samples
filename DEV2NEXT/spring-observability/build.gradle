plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}
ext {
    springAiVersion = "1.0.3"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'observability'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(25)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.ai:spring-ai-starter-model-openai'

    // for AOP-based observability
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // for metrics with Prometheus (and Grafana)
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    // for tracing with Jaeger
    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp'

    runtimeOnly 'org.springframework.boot:spring-boot-docker-compose'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:$springAiVersion"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
